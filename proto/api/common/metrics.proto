// Copyright The TBox Authors. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/**
 * Metrics come from client to server in order to track client's activities.
 */
syntax = "proto3";

package api.common;
option go_package = "github.com/sunsingerus/tbox/pkg/api/common";

import "api/common/metadata.proto";
import "api/common/metric.proto";

// MetricsType represents areas of metrics accumulation - such as resource utilization, etc
enum MetricsType {
    // Due to first enum value has to be zero in proto3
    METRICS_TYPE_RESERVED             = 0;
    // Unspecified means we do not know its type
    METRICS_TYPE_UNSPECIFIED          = 100;
    // Resource utilization, such as CPU, RAM, etc
    METRICS_TYPE_RESOURCE_UTILIZATION = 200;
}

// Metrics is a set of Metric tuples.
// Metric can be classified either by type or by name.
// MetricType can be specified once for the whole set of metrics, instead of specifying in each one of them.
message Metrics {
    // Header represents metadata of the set of metrics
    Metadata header = 100;

    // Optional. Type of metrics set.
    // Object can be typed/identified either by type or by name.
    optional int32 type = 200;

    // Optional. Name of metrics set.
    // Object can be typed/identified either by type or by name.
    optional string name = 300;

    // Metrics is the purpose of the whole Metrics data type, is expected to be present at all time.
    repeated Metric metrics = 400;
}
